package code.bind;

class Node{
	int data;
	Node next;
	Node(int data){
		this.data = data; 
        next = null; 
	}
}
public class LinkList {
	Node head;
	public static void main(String[] args) {
        LinkList llist=new LinkList();
        llist.push(25);llist.push(20);llist.push(15);llist.push(10);llist.push(5);
        llist.printNthFromLast(4); 
	}
	public void push(int data){
		Node node=new Node(data);
		node.next=head;
		head=node;
	}
	void printNthFromLast(int n) 
	{ 
		int len = 0; 
		Node temp = head; 
		while (temp != null) 
		{ 
			temp = temp.next; 
			len++; 
		} 
		if (len < n) 
			return; 

		temp = head; 
		for (int i = 1; i < len-n+1; i++) 
			temp = temp.next; 

		System.out.println(temp.data); 
	} 


	/*
	  Maintain two pointers â€“ reference pointer and main pointer. 
	  Initialize both reference and main pointers to head. 
	  First move reference pointer to n nodes from head. 
	  Now move both pointers one by one until reference pointer reaches end. 
	  Now main pointer will point to nth node from the end. 
	  Return main pointer.
	
    void printNthFromLast(int n) 
    { 
        Node main_ptr = head; 
        Node ref_ptr = head; 
  
        int count = 0; 
        if (head != null) 
        { 
            while (count < n) 
            { 
                if (ref_ptr == null) 
                { 
                    System.out.println(n+" is greater than the no "+ 
                                      " of nodes in the list"); 
                    return; 
                } 
                ref_ptr = ref_ptr.next; 
                count++; 
            } 
            while (ref_ptr != null) 
            { 
                main_ptr = main_ptr.next; 
                ref_ptr = ref_ptr.next; 
            } 
            System.out.println("Node no. "+n+" from last is "+ 
                               main_ptr.data); 
        } 
    }  
	 
	 */
}
