public class SearchInBinaryTree {

	public static void main(String[] args) {

		Node root = new Node(10);
		root.left = new Node(-5);
		root.right = new Node(25);
		root.left.left = new Node(-10);
		root.left.right = new Node(5);
		root.right.left = new Node(24);
		root.right.right = new Node(36);

		System.out.println(root.right.right.data);

		int key=5;
		BinarySearchFxn binarySearchFxn = new BinarySearchFxn();


		Node node=binarySearchFxn.Search(root, 2);
		if(node!=null){
			System.out.println("data found::"+node.data);

		}
		else{
			System.out.println("data not found");
		}


	}

}
public class BinarySearchFxn {

	public Node	Search(Node root,int key){
		if(root==null){
			return null;
		}
		if(root.data==key){
			System.out.println("side::"+root.data);
			return root;
		}
		else if(root.data>key){
			System.out.println("left side::"+root.data);
			return Search(root.left, key);
		}
		else
		{
			System.out.println("here");
			return Search(root.right, key);
		}

	}
}
public class Node {
		int data;
		Node left;
		Node right;
		
		Node(int d){
			this.data = d;
			this.left = null;
			this.right = null;
		}
	
}