package selenium_testing;

import java.util.ArrayList;


public class Test_Selenium {

	//how to check sum in a pair of array 

	public static void main (String[] args) throws java.lang.Exception
	{
		int[] myList = {20, 10, 110,90, 23,5,16,8};


		int sum=33;
		int size=8;


		// Print all the array elements
		for (int i = 0; i < myList.length; i++) {
			System.out.print(myList[i] + " ");
		}
		System.out.println();
		if( hasArrayTwoCandidates(myList, size, sum)==1)
			System.out.print("Array has two elements with sum 33");
		else
			System.out.print("Array doesn't have two elements with sum 33 ");

	}

	static int hasArrayTwoCandidates(int A[], int arr_size, int sum)
	{
		int l, r;

		/* Sort the elements */
		quickSort(A, arr_size, 0,arr_size-1);

		/* Now look for the two candidates in the sorted 
	       array*/
		l = 0;
		r = arr_size-1; 
		while (l < r)
		{
			if(A[l] + A[r] == sum)
			{
               System.out.println("elements are::"+A[l]+" , "+A[r]);
				return 1; 
			}
			else if(A[l] + A[r] < sum)
				l++;
			else // A[i] + A[j] > sum
				r--;
		}    
		return 0;
	}

	public static void quickSort(int myList[],int n,int lowest,int highest){

		int down,up,t,pivot;

		pivot=myList[lowest];

		down=lowest+1;
		up=highest;

		while(down<=up){
			while(myList[down] <=pivot && down<=up){

				down++;
			}
			while(myList[up]>pivot){
				up--;
			}
			if(down<=up){
				t=myList[down];
				myList[down]=myList[up];
				myList[up]=t;
				down++;
				up--;
			}

		}

		myList[lowest]=myList[up];
		myList[up]=pivot;

		if(lowest<up-1){
			quickSort(myList,n,lowest,up-1);
		}

		if(down<highest){
			quickSort(myList, n, down, highest);
		}


	}
}


