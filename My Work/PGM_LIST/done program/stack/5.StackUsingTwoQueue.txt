package code.bind;

import java.util.Arrays;
import java.util.LinkedList;
import java.util.Queue;

public class StackUsingTwoQueue {
	
	Queue<Integer> q1=new LinkedList<Integer>();
	Queue<Integer> q2=new LinkedList<Integer>();
	
	public void push(int x){
		
		q2.add(x);
		
		while(!q1.isEmpty()){
			q2.add(q1.remove());
		}
		
		// swap the names of two queues
		Queue<Integer> q=q1;
		q1=q2;
		q2=q;
	}
	
	public void pop(){
 
        // if no elements are there in q1 
        if (q1.isEmpty())
            return ;
        q1.remove();
       
    }
	int top()
    {
        if (q1.isEmpty())
            return -1;
        return q1.peek();
    }
	
	int size(){
		return q1.size();
	}
	public static void main(String[] args) {
		StackUsingTwoQueue stackUsingTwoQueue=new StackUsingTwoQueue();
		
		stackUsingTwoQueue.push(5);
		stackUsingTwoQueue.push(10);
		stackUsingTwoQueue.push(15);
		stackUsingTwoQueue.push(20);
		System.out.println(Arrays.toString(stackUsingTwoQueue.q1.toArray()));
		stackUsingTwoQueue.pop();
		System.out.println(Arrays.toString(stackUsingTwoQueue.q1.toArray()));
		System.out.println(stackUsingTwoQueue.size());
		System.out.println(stackUsingTwoQueue.top());
		System.out.println(stackUsingTwoQueue.size());
	}
}
